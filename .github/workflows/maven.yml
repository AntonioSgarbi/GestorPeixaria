name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
    - name: Realiza o checkout do repositório
      uses: actions/checkout@v3
    - name: Cofigura o JDK 17    
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Compila o projeto com Maven
      run: mvn -B compile --file backend/pom.xml -Dactive.profile=test          

  build-test:
    runs-on: ubuntu-latest
    environment:
      name: test
    needs: build-dev
    steps:
    - name: Realiza o checkout do repositório
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Cofigura o JDK 17    
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Compila o projeto com Maven
      run: mvn -B test --file backend/pom.xml -Dactive.profile=test
    - name: Cache dos pacotes do SonarCloud
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache dos pacotes do Maven
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/backend/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Verifica o projeto com Maven e Jacoco
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=AntonioSgarbi_gestor_peixaria org.jacoco:jacoco-maven-plugin:prepare-agent -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml  --file backend/pom.xml -Dactive.profile=test
  build-prod:
    runs-on: ubuntu-latest
    environment:
      name: prod
    needs: build-test
    steps:
    - name: Realiza o checkout do repositório
      uses: actions/checkout@v3
    - name: Cofigura o JDK 17    
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Empacota o projeto com Maven, cria a imagem docker e envia imagem para dockerhub.
      env:
        DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
        DOCKERHUB_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}
      run: mvn -B package --file backend/pom.xml jib:build -DskipTests -Dactive.profile=dev
    - name: Compila o projeto com Maven
      run: mvn -B package --file backend/pom.xml -Dskiptests -Dactive.profile=test
    - name: cria uma pasta temporária de downloads de artefatos
      run: mkdir staging
    - name: Copia os artefatos a serem publicados na pasta temporária
      run: cp backend/target/*.jar staging
    - name: Usa Upload Artifact do GitHub Action
      uses: actions/upload-artifact@v2
      with:
        name: Package
        path: staging